{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAEpCC,EAMIH,EALFI,SACEC,EAAMF,EAANG,OACAC,EAAKJ,EAALK,MACAC,EAAIN,EAAJO,KAkCJV,EAAKW,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBACN,IAAIC,EAAW,EACXC,EAAWC,OAAOT,EAAMU,OACxBC,EAAUF,OAAOP,EAAKQ,OACtBE,EAAYH,OAAOX,EAAOY,OAE9BG,YAAW,SAASC,IArCtB,IAAuBC,EAAUC,EACzBC,EAsCAV,GAAYK,GAvCGG,EAwCHR,EAxCaS,EAwCHR,EAvCtBS,EAAgBC,KAAKC,SAAW,GACzB,IAAIC,SAAQ,SAACC,EAASC,GAC7BL,EACFI,EAAQ,CAAEd,SAAAQ,EAAUd,MAAAe,IAGpBM,EAAO,CAAEf,SAAAQ,EAAUd,MAAAe,G,IAIlBO,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAALvB,MACrByB,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANJ,EAAM,MAC5C,CACAK,QAAS,IACTC,SAAS,G,IAGZC,OAAM,SAAAR,G,IAAGjB,EAAQiB,EAARjB,SAAU0B,EAAKT,EAALvB,MACpByB,EAAAnC,GAASoC,OAAOO,QACd,sBAAqCL,OAAftB,EAAS,QAAYsB,OAANI,EAAM,MAC3C,CACEH,QAAS,IACTC,SAAS,G,IAiBXvB,GAAYG,EACZJ,IACAM,WAAWC,EAAKH,KAGhBH,EAAWC,OAAOT,EAAMU,OACxBC,EAAUF,OAAOP,EAAKQ,OACtBE,EAAYH,OAAOX,EAAOY,OAC1BH,EAAW,E,GAGZC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst form = document.querySelector('.form');\n\nlet {\n  elements: {\n    amount,\n    delay,\n    step\n  }\n} = form;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const prom = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    else {\n      reject({ position, delay });\n    }\n  });\n\n  prom.then(({ position, delay }) => {\n    Notiflix.Notify.success(\n      `✅ Fulfilled promise ${position} in ${delay}ms`,\n      {\n        timeout: 3000,\n        useIcon: false\n      },\n    );\n  }).catch(({ position, delay }) => {\n    Notiflix.Notify.failure(\n      `❌ Rejected promise ${position} in ${delay}ms`,\n      {\n        timeout: 3000,\n        useIcon: false\n      },\n    );\n  })\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  let position = 1;\n  let delayInt = Number(delay.value);\n  let stepInt = Number(step.value);\n  let amountInt = Number(amount.value);\n\n  setTimeout(function run() {\n\n    if (position <= amountInt) {\n      createPromise(position, delayInt);\n      delayInt += stepInt;\n      position++;\n      setTimeout(run, stepInt)\n    }\n    else {\n      delayInt = Number(delay.value);\n      stepInt = Number(step.value);\n      amountInt = Number(amount.value);\n      position = 1;\n    }\n\n  }, delayInt);\n})\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","addEventListener","event","preventDefault","position","delayInt","Number","value","stepInt","amountInt","setTimeout","run","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","then","param","delay2","$parcel$interopDefault","Notify","success","concat","timeout","useIcon","catch","delay3","failure"],"version":3,"file":"03-promises.12fc7dd2.js.map"}